{"remainingRequest":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/wqi3/Documents/GitHub/html/docs/nyu/IandP/Week5.md?vue&type=template&id=65daa694&","dependencies":[{"path":"/Users/wqi3/Documents/GitHub/html/docs/nyu/IandP/Week5.md","mtime":1602525995702},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1600070943974},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1600070946946},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1600070943974},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js","mtime":1600070946945},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js","mtime":1600070943655}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgyIGlkPSJmaW5hbC1yZXN1bHQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZmluYWwtcmVzdWx0Ij4jPC9hPiBGaW5hbCBSZXN1bHQ8L2gyPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2lyd2luY2h5aS9pbWdiZWQvbWFzdGVyL2ltZy9GaW5hbCUyMFJlc3VsdC5qcGciIGFsdD0iIj48L3A+CjxoMiBpZD0iZGV0YWlsIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RldGFpbCI+IzwvYT4gRGV0YWlsPC9oMj4KPHA+Rm9yIHRoaXMgcHJvamVjdCwgSSBkZWNpZGVkIHRoYXQgSSBhbSBnb2luZyB0byB1c2UgdGhlIGN1cnJlbnQgQnJhaW5zdG9ybSBjYXJkcyB0byBnZW5lcmF0ZSBhIG5vdmVsIHNwaW4uPC9wPgo8cD5JIGNob3NlIERhbiBMb2NrdG9uJ3MgTmV3IE1ldGFwaG9ycyBUb29sa2l0IGFzIG15IGRlY2suIEkgYW0gZ29pbmcgdG8gcmFuZG9tbHkgZHJhdyAyIHRvIDMgY2FyZHMgZnJvbSBJbWFnZSBjYXJkcywgdGhlbiAxIHRvIDIgY2FyZHMgZnJvbSBjb25jZXB0IGNhcmRzLjwvcD4KPHA+QWZ0ZXIgdGhlIHJhbmRvbSBkcmF3aW5nIHByb2Nlc3MsIEkgaGF2ZSB0aG9zZSBpbWFnZSBjYXJkczo8L3A+Cjx0YWJsZT4KPHRoZWFkPgo8dHI+Cjx0aD5Ud28gY2FyZHMgZnJvbSBDb25jZXB0cyBjYXJkPC90aD4KPHRoPlR3byBjYXJkcyBmcm9tIEltYWdlIENhcmRzPC90aD4KPC90cj4KPC90aGVhZD4KPHRib2R5Pgo8dHI+Cjx0ZD48aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2lyd2luY2h5aS9pbWdiZWQvbWFzdGVyL2ltZy8yMDIwMTAxMTIzNTE1My5wbmciIGFsdD0iIj48L3RkPgo8dGQ+IVtpbWFnZS0yMDIwMTAxMTIzNTIyNDk1OV0oL1VzZXJzL3dxaTMvTGlicmFyeS9BcHBsaWNhdGlvbiBTdXBwb3J0L3R5cG9yYS11c2VyLWltYWdlcy9pbWFnZS0yMDIwMTAxMTIzNTIyNDk1OS5wbmcpPC90ZD4KPC90cj4KPHRyPgo8dGQ+PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pcndpbmNoeWkvaW1nYmVkL21hc3Rlci9pbWcvMjAyMDEwMTEyMzQ5NDEucG5nIi8+PC90ZD4KPHRkPjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaXJ3aW5jaHlpL2ltZ2JlZC9tYXN0ZXIvaW1nLzIwMjAxMDExMjM1MDU1LnBuZyIgYWx0PSIiPjwvdGQ+CjwvdHI+CjwvdGJvZHk+CjwvdGFibGU+CjxoMiBpZD0iZGlmZmVyZW50LWNvbG9yZWQtd2luZG93cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNkaWZmZXJlbnQtY29sb3JlZC13aW5kb3dzIj4jPC9hPiBEaWZmZXJlbnQgY29sb3JlZCBXaW5kb3dzPC9oMj4KPHA+VGhlIGNvbmNlcHQgY2FyZHMgSSBkcmF3IGFyZSB2ZXJ5IGdlbmVyYWwuIFNvIEkgc3RhcnQgdG8gdGhpbmsgYWJvdXQgbXkgcHJvYmxlbSB3aXRoIGEgc2lnbnBvc3QgYW5kIGRpZmZlcmVudCBjb2xvcmVkIHdpbmRvd3MuIEZvciB0aGUgZGlmZmVyZW50IGNvbG9yZWQgd2luZG93cywgdGhlIGZpcnN0IHRoaW5nIEkgdGhpbmsgYWJvdXQgaXMgdGhlIHNreXNjcmFwZXJzIGhhdmUgdGhlIG9uZS13YXkgdHJhbnNwYXJlbnQgZ2xhc3MuIFlvdSBjYW4ndCBzZWUgaW5zaWRlIHRoZSBidWlsZGluZ3MgZnJvbSB0aGUgb3V0c2lkZS4gT3IsIHRoZSBtaXJyb3IgaXMgYSBiaWcgc2NyZWVuLiBUaGVyZSBhcmUgc29tZSBwcm9kdWN0cyBpbiB0aGUgbWFya2V0IHVzaW5nIGEgbWlycm9yIGFzIGEgc2NyZWVuLjwvcD4KPHA+T25lIHByb2R1Y3QgSSB0aGluayBpcyBjb29sIGNhbGxlZCBNaXJyb3IgYnkgTHVsdWxlbW9uLjwvcD4KPGlmcmFtZSB3aWR0aD0iNTYwIiBoZWlnaHQ9IjMxNSIgc3JjPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC95b3ZNUVBUM2cydyIgZnJhbWVib3JkZXI9IjAiIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+CjxwPkkgYmVsaWV2ZSBteSBwcm9kdWN0IHNob3VsZCB1c2UgZ2xhc3MgYXMgdGhlIGNhcnJpZXIgZm9yIHRoZSBtZXNzYWdlLiBUaGUgZ2xhc3MgaXRzZWxmIGNhbid0IGRlbGl2ZXIgYW55IG1lc3NhZ2UsIHNvIGl0IHdpbGwgYmUgYXMgYSBjb21iaW5hdGlvbiBhcyBhIHNjcmVlbi48L3A+CjxwPkkgcmVhbGx5IHdhbnQgdG8gcGVyc3VhZGUgeW91IC0gd2hpbGUgeW91IGFyZSByZWFkaW5nIHRoaXMgYXJ0aWNsZSAtIGV2ZXJ5dGhpbmcgaW4gbXkgaW1hZ2luYXJ5IHByb2R1Y3QgaXMgZmVhc2libGUsIGFwcHJvYWNoYWJsZSwgYW5kIG5vdCBsaW1pdGVkIGJ5IGN1cnJlbnQgdGVjaG5vbG9neS48L3A+CjxwPkkgZGlkIGEgbG90IG9mIHJlc2VhcmNoIGFib3V0IHRoZSB0cmFuc3BhcmVudCBzY3JlZW4uIFhpYW9taSwgYSBDaGluZXNlIHRlY2hub2xvZ3kgY29tcGFueSwgcmVsZWFzZWQgaXRzIGZpcnN0IGZ1bGx5IHRyYW5zcGFyZW50IFRWLjwvcD4KPGlmcmFtZSB3aWR0aD0iNTYwIiBoZWlnaHQ9IjMxNSIgc3JjPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9YQkk3YkRPRU5CTSIgZnJhbWVib3JkZXI9IjAiIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+CjxwPlN1bW1hcml6ZSwgbXkgZmlyc3QgaWRlYSBpcyA8c3Ryb25nPmEgdHJhbnNwYXJlbnQgZ2xhc3Mgc2NyZWVuLjwvc3Ryb25nPjwvcD4KPGgyIGlkPSJhLXNpZ25wb3N0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Etc2lnbnBvc3QiPiM8L2E+IEEgU2lnbnBvc3Q8L2gyPgo8cD5TaWducG9zdCBpcyBldmVyeXdoZXJlIGZyb20gdGhlIG1ldHJvIHN0YXRpb24gdG8gc3VwZXIgbWFsbCdzIGludGVyc2VjdGlvbi4gSW4gTmVicmFza2EsIGEgc2lnbnBvc3QgaXMgbm90IHZlcnkgY29tbW9uIGJlY2F1c2UgbW9zdCBvZiB0aGUgdGltZSwgeW91IG5lZWQgbmF2aWdhdGlvbnM7IHlvdSBhcmUgZHJpdmluZy4gSSBncmV3IHVwIGluIGEgYmlnIGNpdHkgaW4gQ2hpbmEgY2FsbGVkIFhpJ2FuLCB3aXRoIGEgcG9wdWxhdGlvbiBvZiAxMiBtaWxsaW9uLiBXZSBoYXZlIGZpdmUgbWV0cm8gbGluZXMgY3VycmVudGx5IHVzaW5nLCBhbmQgdGhleSBhcmUgc3RpbGwgYnVpbGRpbmcgbW9yZS4gWGknYW4gaGFzIGEgbG9uZyBoaXN0b3J5IGJlY2F1c2UgaXQgaXMgdGhlIGNhcGl0YWwgb2YgMTMgZHluYXN0aWVzIGluIGFuY2llbnQgQ2hpbmVzZSBoaXN0b3J5LiBUaGUgc3RyZWV0IGFuZCBjaXR5IHVyYmFuIHBsYW5uaW5nIGluaGVyaXRlZCBmcm9tIHRoZSBEYW5nIGR5bmFzdHkgb2YgY2hlc3Nib2FyZC1saWtlIHJvYWQuPC9wPgo8aDMgaWQ9InF1aWNrLWJhY2tncm91bmQtYWJvdXQteGktYW4iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcXVpY2stYmFja2dyb3VuZC1hYm91dC14aS1hbiI+IzwvYT4gUXVpY2sgYmFja2dyb3VuZCBhYm91dCBYaSdhbjwvaDM+CjxwPjxpbWcgc3JjPSJodHRwOi8vNWIwOTg4ZTU5NTIyNS5jZG4uc29odWNzLmNvbS9pbWFnZXMvMjAyMDAzMzAvOTNkMDU2ZDhjMDdjNDc4OTkxZTJkZDU1ZWM1N2FhNGEuanBlZyIgYWx0PSIiPjwvcD4KPGJsb2NrcXVvdGU+CjxwPkltYWdlIG9mIGNpdHkgb2YgQ2hhbmcnYW4sIERhbmcgZHluYXN0eS4gRnJvbSA8YSBocmVmPSJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9UYW5nX2R5bmFzdHkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlNvaHU8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8L2Jsb2NrcXVvdGU+CjxwPjxpbWcgc3JjPSJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2MvYzUvQ2hhbmclMjdhbl9vZl9UYW5nLmpwZyIgYWx0PSJpbWciPjwvcD4KPGJsb2NrcXVvdGU+CjxwPk1hcCBvZiBDaGFuZydhbiBDaXR5IGluIFRhbmcgRHluYXN0eSwgcmV0cmlldmVkIGZyb20gPGEgaHJlZj0iaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvWGklMjdhbiMvbWVkaWEvRmlsZTpDaGFuZydhbl9vZl9UYW5nLmpwZyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+V2lraXBlZGlhPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPC9ibG9ja3F1b3RlPgo8cD5JbiB0aGUgY2VudGVyIG9mIFhpJ2FuLCAgdGhlcmUgaXMgYSBidWlsZGluZyBuYW1lZCBCZWxsIFRvd2VyLiBBcm91bmQgaXQsIGl0J3MgdGhlIGNlbnRlciBvZiBYaSdhbi4gWW91IGNhbiBjYWxsIGl0IGRvd250b3duLiBUaGVyZSBpcyBhbiB1bmRlcnBhc3MgbmFtZWQgQmVsbCBUb3dlciB1bmRlcnBhc3MuICBYaSdhbiBoYXMgZm91ciBtZWFuIHN0cmVldHMgbmFtZWQgTm9ydGgsIFNvdXRoLCBFYXN0LCBXZXN0IE1haW5zdHJlZXQuIEJlbGwgVG93ZXIgdW5kZXJwYXNzIGhhcyB0ZW4gZXhpdHMuCldoaWxlIEkgc2VlIHRoZSBrZXl3b3JkIG9mICZxdW90O3NpZ25wb3N0LCZxdW90OyB0aGUgZmlyc3QgdGhpbmcgdGhhdCBjYW1lIHVwIHRvIG15IG1pbmQgaXMgdGhlIHNpZ25wb3N0IGluIEJlbGwgVG93ZXIgdW5kZXJwYXNzLiBUaGUgdW5kZXJwYXNzIGl0c2VsZiBpcyB2ZXJ5IGNvbmZ1c2luZywgYW5kIHRoZSBzaWducG9zdCBtYWtlcyBpdCB3b3JzZS4gSSBzcGVuZCAyMCB5ZWFycyBncm93aW5nIHVwIGluIHRoYXQgY2l0eSBhcyBhIG5hdGl2ZSwgYW5kIEkgZ290IGxvc3QgYWxsIHRoZSB0aW1lLiBIZXJlJ3MgYW4gaW1hZ2Ugb2YgQmVsbCBUb3dlciBzaWducG9zdC48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaXJ3aW5jaHlpL2ltZ2JlZC9tYXN0ZXIvaW1nL2NhNzFhMWNmNTI4MTU3ZWE5N2E1NTBkNmE5M2QwN2VhLmpwZ19yXzcyMHg0ODB4OTVfMDAyMzQxOGYuanBnIiBhbHQ9IiI+PC9wPgo8cD5BbmQgdGhleSBuYW1lZCBleGl0IGxpa2U8L3A+Cjx1bD4KPGxpPk5vcnRoIE1haW5zdHJlZXQgV2VzdCBFeGl0PC9saT4KPGxpPkVhc3QgTWFpbnN0cmVldCBOb3J0aCBFeGl0PC9saT4KPGxpPkVhc3QgTWFpbnN0cmVldCBTb3V0aCBFeGl0PC9saT4KPC91bD4KPHA+SXQgaXMgZGVmaW5pdGVseSB2ZXJ5IGNvbmZ1c2luZyBmb3IgdG91cmlzdHMsIGFuZCBhbnlvbmUgYXJyaXZlZCBpbiBYaSdhbiBmb3IgdGhlIGZpcnN0IHRpbWUuPC9wPgo8cD5JIHdpc2ggdG8gcmVkZXNpZ24gdGhlIFhpJ2FuIHVuZGVycGFzcyBzaWducG9zdCB1c2luZyBhIHRyYW5zcGFyZW50IGdsYXNzIHNjcmVlbi4gU2luY2UgeW91IGhhdmUgY2VsbGluZyB3YWxraW5nIHVuZGVyZ3JvdW5kLCB0aGUgc2NyZWVuIGNvdWxkIGhhbmcgaW4gYWxsIGZvdXIgZGlyZWN0aW9ucywgb3IgYW4gYW5udWx1cyBzaGFwZSBzY3JlZW4gYW5kIHlvdSBjYW4gc2VlIHRoaW5ncyBpbiBhbGwgZGlyZWN0aW9ucy48L3A+CjxwPkhlcmUgaXMgYSBxdWljayBza2V0Y2ggb2YgbXkgaWRlYTo8L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaXJ3aW5jaHlpL2ltZ2JlZC9tYXN0ZXIvaW1nL1VudGl0bGVkX0FydHdvcmslMjAxMC5qcGciIGFsdD0iIj48L3A+CjxwPlNpbmNlIEkgY291bGQgbm90IHBoeXNpY2FsbHkgYmFjayB0byBDaGluYSBhbmQgdGFrZSBwaG90b3MgZm9yIG1vY2t1cHMuIEkgZm91bmQgdGhpcyBwaG90byBvbmxpbmUuPC9wPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgZGFuZ2VyIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5Db3B5cmlnaHQgRGlzY2xhaW1lcjwvcD4KPHA+VGhlIHBpY3R1cmUgdXNlZCBpbiB0aGlzIHByb2plY3Qgd2FzIGZvdW5kIG9ubGluZS4gTm8gY29weXJpZ2h0IG9mIHRoYXQgaW1hZ2UuIFBlcnNvbmFsIFN0dWRlbnQgcHJhY3RpY2UgcHJvamVjdCB1c2Ugb25seS4gTm9uLWNvbW1lcmNpYWwgdXNlIG9ubHkuPC9wPgo8L2Rpdj4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pcndpbmNoeWkvaW1nYmVkL21hc3Rlci9pbWcvZDQxZWMwMDg2MzczNDZhN2FkNWEzMzdlMmYxZjZkNTQuanBnLW1vYmlsZS5qcGVnIiBhbHQ9IiI+PC9wPgo8YmxvY2txdW90ZT4KPHA+WGknYW4gQmVsbCBUb3dlciB1bmRlcnBhc3MsIFJlY2VpdmVkIGZyb20gPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVpcGlhbi5jbi8xbjNta253ZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+aHR0cHM6Ly93d3cubWVpcGlhbi5jbi8xbjNta253ZjxPdXRib3VuZExpbmsvPjwvYT48L3A+CjwvYmxvY2txdW90ZT4KPHA+SSB1c2VkIENpbmVtYSA0RCBjYW1lcmEgdHJhY2tpbmcgdG8gdHJhY2sgdGhlIFgsWSwgYW5kIFotYXhpcy4gVGhlbiBjcmVhdGVkIHRoZSBzaGFwZSBvZiB0aGUgc2NyZWVuIG9uIHRoZSB0b3AuIEkgcmVuZGVyZWQgYW4gZW1wdHkgc2hhcGUgb2YgdGhlIHNjcmVlbiBhbmQgYWRkZWQgc2lnbnBvc3QgaW4gUGhvdG9zaG9wLjwvcD4KPHA+PGltZyBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pcndpbmNoeWkvaW1nYmVkL21hc3Rlci9pbWcvc2NyZWVuc2hvdGMuSlBHIiBhbHQ9IiI+PC9wPgo8cD48aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2lyd2luY2h5aS9pbWdiZWQvbWFzdGVyL2ltZy9QU1NjcmVlbnNob290LkpQRyIgYWx0PSIiPjwvcD4KPHA+VGhpcyBwcm9kdWN0IC0gd2hlbiB0aGUgcGFzc2VuZ2VyIGlzIHN0YW5kaW5nIGluIHRoZSBjZW50ZXIsIGFuZCB1bmRlciB0aGUgZ2xhc3MgLSB0aGV5IGNvdWxkIGNoZWNrIHRoZSBwbGFjZSB0aGV5IG5lZWQgdG8gZ28gdmVyeSBlYXNpbHkuIEkgcmVtZW1iZXJlZCBldmVyeSB0aW1lIEkgd2VudCB0byB0aGUgQmVsbCBUb3dlciB1bmRlcnBhc3MgYmVjYXVzZSBpdCBpcyB1bmRlcmdyb3VuZCwgdGhlcmUgaXMgbm8gR1BTIHNpZ25hbC4gSSBiZWxpZXZlIHRoaXMgcHJvZHVjdCBjb3VsZCBicmluZyBwZW9wbGUgY2FsbW5lc3MgaW4gdGVjaG5vbG9neS4gLjwvcD4KPGgyIGlkPSJmdXR1cmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZnV0dXJlIj4jPC9hPiBGdXR1cmU8L2gyPgo8cD5BbGwgdGhlIHNjaS1maSBtb3ZpZXMgaW4gcmVjZW50IHllYXJzIGltYWdpbmVkIGEgd29ybGQgZmlsbGVkIHdpdGggZnJvbnQtcHJvamVjdGVkIGhvbG9ncmFwaGljIGRpc3BsYXkgdGVjaG5vbG9neS4gQnV0IGhvbmVzdGx5LCB0aGUgdGVjaG5vbG9neSBpc24ndCB0aGVyZSB5ZXQuIFRoZSB0cmFuc3BhcmVudCBnbGFzcyBhbmQgc2NyZWVuIGlzIGEgbW9yZSBhcHByb2FjaGFibGUgd2F5LiBJdCBjb3VsZCBhbHNvIGJlIHVzZWQgYXMgYSBidXMgc3RvcCBib2FyZCwgY29tbWVyY2lhbCBiaWxsYm9hcmQuIE1heWJlIHRoZSBuZXh0IHRpbWUgeW91IHZpc2l0IGEgYm91dGlxdWUgZmFzaGlvbiBzdG9yZSBvbiB0aGUgc3RyZWV0LCB0aGVpciBzaG9wd2luZG93IGlzIG5vdCBvbmx5IGdsYXNzIGJ1dCBhbHNvIGEgc2NyZWVuLjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}