{"remainingRequest":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/wqi3/Documents/GitHub/html/docs/nyu/vr/Week2.md?vue&type=template&id=3282cb77&","dependencies":[{"path":"/Users/wqi3/Documents/GitHub/html/docs/nyu/vr/Week2.md","mtime":1600665863850},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1600070943974},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1600070946946},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1600070943974},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js","mtime":1600070946945},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js","mtime":1600070943655}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJ3ZWVrLTIiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI3dlZWstMiIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIFdlZWsgMiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImZpZWxkLXN0dWR5IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNmaWVsZC1zdHVkeSIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgRmllbGQgU3R1ZHkiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW192bS5fdigiVmlkZW8gaXMgY29taW5nIHJpZ2h0IHVwLi4uIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJkYXlkcmVhbS1zdHVkeSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjZGF5ZHJlYW0tc3R1ZHkiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIERheWRyZWFtIFN0dWR5IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImN1c3RvbS1ibG9jayB0aXAiIH0sIFsKICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjdXN0b20tYmxvY2stdGl0bGUiIH0sIFtfdm0uX3YoIkRyZWFtPyEiKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiVW5mb3J0dW5hdGVseSwgSSBiYXJlbHkgZHJlYW0sIG9yIEkgbmV2ZXIgcmVtZW1iZXIgbXkgZHJlYW0uIFVzdWFsbHksIHdoZW4gSSBhbSBzaWNrLCBJIHdpbGwgZ2V0IGEgd2VpcmQgZHJlYW0sIGFuZCBtb3N0IG9mIHRoZSB0aW1lIGlzIGEgbmlnaHRtYXJlLiBTbyBpdCdzIGtpbmQgb2Ygc2FkLiBJIGFtIGEgYml0IHN0cmVzc2VkIG91dCBmb3IgdGhpcyBhc3NpZ25tZW50IGJlY2F1c2UgSSBhbSBzbyByZWFsaXN0aWMgbW9zdCBvZiB0aGUgdGltZSBhbmQgYmFyZWx5IGRheWRyZWFtLiBTbyBJIGFtIGdvaW5nIHRvIHdyaXRlIGEgc3RyYW5nZSBzdG9yeS4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJPd2VuIGhhcyBhIGdyZXkgY2F0IHRoYXQgc2VlbXMgYWJub3JtYWwgdG9kYXkuIEhpcyBjYXQgZGlkbid0IGVhdCBvciBkcmluaywgb25seSBtZW93aW5nIGFsbCB0aGUgdGltZS4gVG9kYXkgaXMgdGhlaXIgZmlyc3QgZGF5IG1vdmVkIGludG8gdGhpcyBuZXcgYXBhcnRtZW50LiBIZSBhc3N1bWVzIGhlIGlzIG1lb3dpbmcgYmVjYXVzZSBpdCdzIGEgbmV3IGVudmlyb25tZW50IGZvciBoaW0uIEhpcyBjYXQganVtcGVkIHVwIG9uIGEgYm94LCBwdXNoaW5nIGJvdGggaGlzIGJvdGggcmVhciBwYXdzIGFnYWluc3QgaXQuIFN1ZGRlbmx5IGhlIGp1bXBlZCBhbmQgcHJlc3NlZCB0aGUgZG9vcmtub2I7IGJlZm9yZSBJIGV2ZW4gbm90aWNlZCwgaGUgd2VudCBvdXQgb2YgdGhlIGRvb3IuIEkgY2hhc2VkIGhpbSBvdXQsIGFuZCBoZSBkaXJlY3RseSByYW4gaW50byB0aGUgZWxldmF0b3IuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAnIlNvcnJ5IEtpZGRvLCBJIGZvcmdvdCBteSBjb21tdW5pY2F0aW9uIGRldmljZXMuIiBUaGUgZ3JleSBjYXQgc2FpZC4nCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICciSSBoYXZlIHRvIGNvbW11bmljYXRlIHdpdGggbXkgcGxhbnQuIiBPd2VuIGRyb3BwZWQgYm90aCBoaXMgamF3IGFuZCBwaG9uZS4gSGUgbG9va2VkIGFyb3VuZCB0aGUgZWxldmF0b3I7IGhlIGlzIGFsb25lIHdpdGggaGlzIGNhdC4nCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICciV2UgYXJlIG5vdCBkb2dzOyB3ZSBkb25cJ3QgcmVtZW1iZXIgdGhlIG9sZCBob21lLiBEcml2ZSBtZSBiYWNrLCB5b3Ugc3R1cGlkIGh1bWFuLiIgSGlzIGNhdCB3YXMgcm9sbGluZyB0aGUgZXllYmFsbHMgYW5kIHJlbGVhc2VkIGhpcyBjbGF3LiAiVGFrZSBtZSBiYWNrIG5vdy4iJwogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAnT3dlbiBwaWNrZWQgdGhlIGNhdCB1cCwgIkkgbWlnaHQgbmVlZCB0byBzZWUgYSBwc3ljaGlhdHJpc3QuIiBIZSB0dXJuZWQgb24gdGhlIGVuZ2luZSBhbmQgZHJpdmUgdG8gdGhlIG9sZCBhcGFydG1lbnQuIEhlIG9wZW5lZCB0aGUgZG9vciBhbmQgYWxsb3dlZCBoaXMgY2F0IHRvIGdldCBpbi5cbiJXaGF0IGFyZSB5b3UgbG9va2luZz8gV2hhdCBjb21tdW5pY2F0aW9uIGRldmljZXM/IiBUaGUgb2xkIGFwYXJ0bWVudCBzbWVsbHMgbGlrZSBibGVhY2guIE93ZW4gY2xlYW5lZCB2ZXJ5IHRob3JvdWdobHkuICJXaGVyZSBpcyBteSBsaXR0ZXIgYm94PyInCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW192bS5fdignIkkgdGhyZXcgaXQgYXdheTsgaXRcJ3Mgb2xkLiInKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJyJCdXQgSSBsaWtlIHRoZSBvbGQgb25lLCB3aGVyZSBpcyBpdD8iICJJdCBtaWdodCBiZSBzdGlsbCBpbiB0aGUgZHVtcHN0ZXIuIicKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCciR3JhYiBpdCBiYWNrIG5vdyIgIk9rYXksIG9rYXkuIicpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiTHVja2lseSwgdGhlIG9sZCBsaXR0ZXIgYm94IGlzIHN0aWxsIGluIHRoZSBkdW1wc3Rlci4gSGUgc2V0IGl0IHVwIGF0IHRoZSBuZXcgYXBhcnRtZW50LiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJyJDb21lIGhlcmUsIGtpZGRvLCIgSGlzIGNhdCBzYWlkLiAiV2h5IGRvIHlvdSBjYWxsIG1lIGtpZGRvPyBZb3UgYXJlIG9ubHkgZWlnaHQgeWVhcnMgb2xkLiInCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICciSWYgSSBjb252ZXJ0IHRvIGh1bWFuIGFnZSwgSVwnbSBpbiBteSA1MHMuIEkgYW0gaW4gdGhlIGFnZSBvZiB5b3VyIGRhZC4iJwogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoJyJXaGF0PyBGYWlyLiBXaGF0XCdzIHRoZSBtYWdpYyBvZiB5b3VyIGxpdHRlciBib3g/IicpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAnIllvdSBrbm93LCB5b3UgaHVtYW5zIGxpa2UgdG8gZm9sbG93IHVzIGV2ZXJ5d2hlcmUsIGV4Y2VwdCB0aGUgbGl0dGVyIGJveC4gSXQgbWlnaHQgYmUgYSBsaXR0ZXIgYm94IG91dHNpZGUsIGJ1dCBvbmNlIEkgcHVzaCB0aGUgbGl0dGVyIGluIGEgY2VydGFpbiBmcmVxdWVuY3ksIGl0IHdpbGwgY29ubmVjdCB3aXRoIG91ciBtb3RoZXIgcGxhbnRzLiBEb25cJ3QgeW91IGh1bWFucyBoYXZlIHNvbWV0aGluZyBsaWtlIFRhcmRpcz8gRXZlbiBJIGtub3cgRG9jdG9yIFdoby4gRmFzY2luYXRpbmcgbWF0ZXJpYWwgdG8gbGVhcm4gaHVtYW4gYmVpbmdzLiIgSGUgY2F0IGp1bXBlZCBpbnRvIHRoZSBsaXR0ZXIgYm94LiBBbGwgT3dlbiBoZWFycyBpcyB0aGUgY2F0IHN0YXJ0ZWQgYnVyeS4gVGhlIGxpdHRlciBib3ggc2hha2VzIHNsaWdodGx5IGFuZCBzdGFydHMgdG8gZ2xvdyBzb21lIGxpZ2h0LCBsaWtlIGV2ZXJ5IGVudHJhbmNlIGluIGEgY2xpY2hlZCBzY2ktZmkgbW92aWUuJwogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiT3dlbiBwdXQgaGlzIGhlYWQgaW50byB0aGUgbGl0dGVyIGJveDsgaW50ZXJlc3RpbmdseSwgaXQgc21lbGxzIGxpa2Ugc3ByaW5nLCBoZSBjYW4ndCBpbWFnaW5lIHRoZSBzdWNoIGJpZyBzcGFjZSBpbiB0aGUgbGl0dGVyIGJveC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJPd2VuIHdva2UgdXAgb24gdGhlIGZsb29yLCBoaXMgaGVhZCBzZWVtcyBoaXQgYnkgc29tZXRoaW5nLCBhbmQgaGlzIHZpc2lvbiBpcyBibHVycnkuIFRoZSBsaXR0ZXIgc2FuZCBpcyBldmVyeXdoZXJlIG9uIHRoZSBncm91bmQuIEhlIGlzIGFib3V0IHRvIGdldCBtYWQgYmVjYXVzZSBjbGVhcmx5LCBpdCdzIGhpcyBjYXQncyBjcmltZS4gSGlzIGNhdCBpcyBwdXJyaW5nIGFuZCBrbmVhZGluZyBvbiB0aGlzIGNoZXN0IHdoaWxlIHJ1YmJpbmcgT3dlbiB3aXRoIGhpcyBmb3JlaGVhZC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICciRmluZSwgSSB3aWxsIHN0YXkgaGVyZSBhIGJpdCBsb25nZXIgYmVmb3JlIEkgZ2V0IHVwIGFuZCBjbGVhbiB5b3VyIG1lc3MuIiBPd2VuIHRoaW5rcy4nCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgem9vbTogIjMzJSIgfSwKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOgogICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2lyd2luY2h5aS9pbWdiZWQvbWFzdGVyL2ltZy9JTUdfMjM5Ni5qcGciCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJibG9ja3F1b3RlIiwgWwogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiTWVldCBCZWFuIEJ1biwgbXkgcm9vbW1hdGUgd2VudCBiYWNrIHRvIENoaW5hIGFuZCBJIGFtIGJhYnktc2l0dGluZyBoZXIiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIlRoYW5rIHlvdSBmb3IgcmVhZGluZyBteSBsYW1lIHN0b3J5LiIpXSkKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}