{"remainingRequest":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/wqi3/Documents/GitHub/html/docs/nyu/IandP/Week1.md?vue&type=template&id=65d8d518&","dependencies":[{"path":"/Users/wqi3/Documents/GitHub/html/docs/nyu/IandP/Week1.md","mtime":1600065329746},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1599684981000},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1599684981000},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/cache-loader/dist/cjs.js","mtime":1599684981000},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/vue-loader/lib/index.js","mtime":1599684981000},{"path":"/Users/wqi3/Documents/GitHub/html/node_modules/@vuepress/markdown-loader/index.js","mtime":1599684981000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJ3ZWVrLTEtZmFudGFzeS1kZXZpY2UiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI3dlZWstMS1mYW50YXN5LWRldmljZSIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFdlZWsgMSBGYW50YXN5IERldmljZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjdXN0b20tYmxvY2sgdGlwIiB9LCBbCiAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY3VzdG9tLWJsb2NrLXRpdGxlIiB9LCBbCiAgICAgICAgICBfdm0uX3YoIkRldmlhdGVkIGZyb20gR3JvdXAgSWRlYSIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJPdXIgZ3JvdXAgd2FzIHNob3J0IG9uIHRpbWUgZHVyaW5nIHRoZSBkaXNjdXNzaW9uIHRpbWUuIENvdXBsZSBvZiBkYXlzIGFnbywgd2hlbiBJIGRvIG15IGRpc2hlcywgSSBjYW1lIHVwIHdpdGggdGhpcyBpZGVhLiBJIGhvcGUgaXQncyBva2F5IHRvIGRldmlhdGUgZnJvbSBvdXIgZ3JvdXAgaWRlYS4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiYXV0by1sb2FkLWRlbG9hZC1kaXNod2FzaGVyIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNhdXRvLWxvYWQtZGVsb2FkLWRpc2h3YXNoZXIiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBBdXRvIExvYWQgLSBEZWxvYWQgRGlzaHdhc2hlciIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogInNrZXRjaCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjc2tldGNoIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgU2tldGNoIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaXJ3aW5jaHlpL2ltZ2JlZC9tYXN0ZXIvaW1nL0ZhbnRhc3lEZXZpY2UuanBlZyIsCiAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJtYWluLWZ1bmN0aW9ucyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbWFpbi1mdW5jdGlvbnMiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIE1haW4gRnVuY3Rpb25zIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiT24gdGhlIHVwcGVyIHNpZGUgb2YgdGhlIGRpc2h3YXNoZXIgZG9vciwgeW91IGNhbiBmZWVkIHRoZSBwbGF0ZSBpbiBsaWtlIHlvdSBmZWVkIENEIHRvIHRoZSBDRCBwbGF5ZXIiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiV2hlbmV2ZXIgeW91IG5lZWQgYSBwbGF0ZSwgc2ltcGx5IHByZXNzIHRoZSBERUxPQUQgRElTSCBidXR0b24sIGFuZCBpdCB3aWxsIGZlZWQgeW91IGEgbmV3IG9uZSIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJUaGUgZGV0ZXJnZW50IHdpbGwgbm93IHB1dCBpdCBmcm9tIHRoZSB1cHBlciBzaWRlIG9mIHRoZSBtYWNoaW5lLCBzbyB5b3UgZG9uJ3QgaGF2ZSB0byBiZW50IG92ZXIgdG8gcmVhY2ggaXQiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiSW5zaWRlLCB0aGUgdXBwZXIgbGV2ZWwgaGFzIGhvb2tzL2NsYXdzIHRvIGF1dG9tYXRpY2FsbHkgbG9hZCBhbmQgZGVsb2FkIHRoZSBwbGF0ZSBmb3IgeW91IgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiVGhlIGxvdmVyIGxldmVsLCB5b3UgY2FuIHN0aWxsIHVzZSBhcyBub3JtYWwgZGlzaCB3YXNoZXIiKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogInN0b3J5LWJlaGluZC1pdCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjc3RvcnktYmVoaW5kLWl0IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBTdG9yeSBCZWhpbmQgaXQiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgZGlzaHdhc2hlciBpcyBub3QgY29tbW9uIGluIGEgQ2hpbmVzZSBmYW1pbHkuIEdyb3dpbmcgdXAsIHdhc2hpbmcgZGlzaGVzIGlzIGFsd2F5cyBwYXJ0IG9mIG1lIGFuZCBteSBtb20ncyBqb2IgYmVjYXVzZSBteSBkYWQgaXMgdGhlIGNoaWVmLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIldoZW4gSSBmaXJzdCBhcnJpdmVkIGluIHRoZSBVLlMuIGFuZCBnb3QgbXkgb3duIGFwYXJ0bWVudC4gSSBuZXZlciB1c2UgbXkgZGlzaHdhc2hlciBmb3IgYSB2ZXJ5IGxvbmcgdGltZSBiZWNhdXNlIEkgZG9uJ3Qga25vdyBob3cgdG8gdXNlIGl0LiAoSSBkb24ndCBldmVuIGtub3cgd2hhdCBkZXRlcmdlbnQgaXMpIEkgdXNlIHRoZSBkaXNod2FzaGVyIGFzIGFuIGV4dHJhIHBsYWNlIHRvIGRyYWluIGFuZCBkcnkgb3V0IG15IGdsYXNzd2FyZS4gSSB2aXNpdGVkIG15IGZyaWVuZHMnIGhvdXNlLCBhbmQgaGUgdGF1Z2h0IG1lIGhvdyB0byBsb2FkIHRoZSBwbGF0ZSBwcm9wZXJseS4gSGUgZXZlbiBnYXZlIG1lIGEgZmV3IGRldGVyZ2VudCBibG9ja3MgdG8gbGV0IG1lIHRyeSBpdCBvdXQuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlIGZpcnN0IHRpbWUgd2hlbiBteSBkaXNoZXMgaXMgcmVhZHkgYW5kIGNsZWFuLCBJIFdvd2VkIGxpa2UgQ2F2ZSBNYW4gbWV0IHRoZSBuZXcgaVBob25lLiBJIGJyYWdnZWQgaXQgd2l0aCBteSBtb20gYW5kIHNob3dlZCBoZXIgaG93IGVmZm9ydGxlc3NseSB0byB3YXNoIHRoZSBkaXNoZXMuIEFuZCB0aGVyZSBhcmUgYSBmZXcgcHJvYmxlbXMgSSBoYXRlIGFib3V0IHVzaW5nIHRoZSBkaXNod2FzaGVyOiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIldoZW4gSSBoYXZlIGxvd2VyIGJhY2sgcGFpbiwgdGhlIGxhc3QgdGhpbmcgSSB3YW50IHRvIGRvIGlzIGJlbmQgb3ZlciBhbmQgcHV0IGRldGVyZ2VudCB0aGVyZTsgd2h5IGl0IGNhbid0IGxvYWQgZml2ZSBkZXRlcmdlbnRzIGF0IHRoZSBzYW1lIHRpbWU/IgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkkgaGF0ZSBsb2FkIGRpc2hlcywgYW5kIHNvbWV0aW1lcyBJIGxvYWQgaXQgd3JvbmcsIHNvIHRoZXJlIGFsd2F5cyBzb21lIGRpc2hlcyB0aGF0IGFyZSBub3QgY2xlYW5lZCBwcm9wZXJseS4iCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiSSBoYXRlIHRvIHVubG9hZCB0aGUgZGlzaGVzLiBEaXNod2FzaGVyIHNwb2lsZWQgbWUgbm90IHRvIHdhc2ggZGlzaGVzLCB3aHkgbm90IHNwb2lsIG1lIGEgbGl0dGxlIGJpdCBtb3JlPyBDb3VsZCBJIGxvYWQgYW5kIHVubG9hZCB0aGUgZGlzaCBmb3IgbWU/IgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIkZldyBQYWluIFBvaW50cyBvZiB0aGUgY3VycmVudCBwcm9kdWN0IildKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJMb2FkIGFuZCB1bmxvYWQgcHJvY2VzcyIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRm9yIHRoZSBvdmVyIHRyYXk6IEJlbmQgb3Zlciwgc3RhbmQgdXAsIGJlbmQgb3Zlciwgc3RhbmQgdXAgZm9yIHRoZSBkaXNoZXMiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiRGV0ZXJnZW50IGhhcyB0byBiZSBsb2FkZWQgZXZlcnkgc2luZ2xlIHRpbWUiKV0pCiAgICAgIF0pCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}